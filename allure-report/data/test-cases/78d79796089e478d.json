{"uid":"78d79796089e478d","name":"test_delete_v1_account_login","fullName":"tests.delete_v1_account_login.test_delete_v1_account_login#test_delete_v1_account_login","historyId":"35a6306a76da74b4a50000628e9b532e","time":{"start":1749307891643,"stop":1749307891643,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://5.63.153.31:5051/v1/account","statusTrace":"account_helper = <helpers.account_helper.AccountHelper object at 0x10c11b110>\nprepared_user = user(login='sgureev+1749307891', password='123456789', email='sgureev+1749307891@mail.ru')\n\n    @pytest.fixture\n    def registered_user(account_helper, prepared_user):\n        login = prepared_user.login\n        password = prepared_user.password\n        email = prepared_user.email\n>       account_helper.register_new_user(login=login,password=password,email=email)\n\nconftest.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../helpers/account_helper.py:58: in register_new_user\n    register_response = self.dm_account_api.account_api.post_v1_account(registration_initialized_object)\n../dm_api_account/apis/account_api.py:30: in post_v1_account\n    response = self.post(\n../restclient/client.py:27: in post\n    return self._send_request(method=\"POST\", path=path, **kwargs)\n../restclient/utilities.py:16: in wrapper\n    response = fn(*args, **kwargs)\n../restclient/client.py:64: in _send_request\n    rest_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://5.63.153.31:5051/v1/account\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"set_config","time":{"start":1749307891644,"stop":1749307891645,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"prepared_user","time":{"start":1749307891645,"stop":1749307891646,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"mailhog","time":{"start":1749307891645,"stop":1749307891645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"account","time":{"start":1749307891645,"stop":1749307891645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"account_helper","time":{"start":1749307891645,"stop":1749307891645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"registered_user","time":{"start":1749307891646,"stop":1749307891963,"duration":317},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://5.63.153.31:5051/v1/account\n","statusTrace":"  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/tests/conftest.py\", line 68, in registered_user\n    account_helper.register_new_user(login=login,password=password,email=email)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/helpers/account_helper.py\", line 58, in register_new_user\n    register_response = self.dm_account_api.account_api.post_v1_account(registration_initialized_object)\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/dm_api_account/apis/account_api.py\", line 30, in post_v1_account\n    response = self.post(\n        path=f\"/v1/account\",\n        json= registration.model_dump(exclude_none=True, by_alias=True),\n        **kwargs\n    )\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/restclient/client.py\", line 27, in post\n    return self._send_request(method=\"POST\", path=path, **kwargs)\n           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/restclient/utilities.py\", line 16, in wrapper\n    response = fn(*args, **kwargs)\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/restclient/client.py\", line 64, in _send_request\n    rest_response.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[{"name":"register new user","time":{"start":1749307891646,"stop":1749307891959,"duration":313},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://5.63.153.31:5051/v1/account\n","statusTrace":"  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/helpers/account_helper.py\", line 58, in register_new_user\n    register_response = self.dm_account_api.account_api.post_v1_account(registration_initialized_object)\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/dm_api_account/apis/account_api.py\", line 30, in post_v1_account\n    response = self.post(\n        path=f\"/v1/account\",\n        json= registration.model_dump(exclude_none=True, by_alias=True),\n        **kwargs\n    )\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/restclient/client.py\", line 27, in post\n    return self._send_request(method=\"POST\", path=path, **kwargs)\n           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/restclient/utilities.py\", line 16, in wrapper\n    response = fn(*args, **kwargs)\n  File \"/Users/sergeygureev/PycharmProjects/my_api_tests/restclient/client.py\", line 64, in _send_request\n    rest_response.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[{"uid":"15959c2ea31b1ed","name":"request_body","source":"15959c2ea31b1ed.json","type":"application/json","size":109}],"parameters":[{"name":"login","value":"'sgureev+1749307891'"},{"name":"email","value":"'sgureev+1749307891@mail.ru'"},{"name":"password","value":"'123456789'"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://5.63.153.31:5051/v1/account","statusTrace":"account_helper = <helpers.account_helper.AccountHelper object at 0x10c11b110>\nprepared_user = user(login='sgureev+1749307891', password='123456789', email='sgureev+1749307891@mail.ru')\n\n    @pytest.fixture\n    def registered_user(account_helper, prepared_user):\n        login = prepared_user.login\n        password = prepared_user.password\n        email = prepared_user.email\n>       account_helper.register_new_user(login=login,password=password,email=email)\n\nconftest.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../helpers/account_helper.py:58: in register_new_user\n    register_response = self.dm_account_api.account_api.post_v1_account(registration_initialized_object)\n../dm_api_account/apis/account_api.py:30: in post_v1_account\n    response = self.post(\n../restclient/client.py:27: in post\n    return self._send_request(method=\"POST\", path=path, **kwargs)\n../restclient/utilities.py:16: in wrapper\n    response = fn(*args, **kwargs)\n../restclient/client.py:64: in _send_request\n    rest_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://5.63.153.31:5051/v1/account\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","steps":[],"attachments":[{"uid":"cf7fcbefa8b60e","name":"stdout","source":"cf7fcbefa8b60e.txt","type":"text/plain","size":1385}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests.delete_v1_account_login"},{"name":"suite","value":"test_delete_v1_account_login"},{"name":"host","value":"sergeygureevs-MacBook-Pro.local"},{"name":"thread","value":"79350-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.delete_v1_account_login.test_delete_v1_account_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"78d79796089e478d.json","parameterValues":[]}