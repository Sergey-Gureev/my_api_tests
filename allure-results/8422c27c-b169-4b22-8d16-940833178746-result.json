{"name": "test_delete_v1_account_login", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://5.63.153.31:5051/v1/account", "trace": "account_helper = <helpers.account_helper.AccountHelper object at 0x10c11b110>\nprepared_user = user(login='sgureev+1749307891', password='123456789', email='sgureev+1749307891@mail.ru')\n\n    @pytest.fixture\n    def registered_user(account_helper, prepared_user):\n        login = prepared_user.login\n        password = prepared_user.password\n        email = prepared_user.email\n>       account_helper.register_new_user(login=login,password=password,email=email)\n\nconftest.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../helpers/account_helper.py:58: in register_new_user\n    register_response = self.dm_account_api.account_api.post_v1_account(registration_initialized_object)\n../dm_api_account/apis/account_api.py:30: in post_v1_account\n    response = self.post(\n../restclient/client.py:27: in post\n    return self._send_request(method=\"POST\", path=path, **kwargs)\n../restclient/utilities.py:16: in wrapper\n    response = fn(*args, **kwargs)\n../restclient/client.py:64: in _send_request\n    rest_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://5.63.153.31:5051/v1/account\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/requests/models.py:1024: HTTPError"}, "attachments": [{"name": "stdout", "source": "63ee59f0-eb92-4f1d-9fc3-64b9d108bdde-attachment.txt", "type": "text/plain"}], "start": 1749307891643, "stop": 1749307891643, "uuid": "456224f0-9969-4ede-a608-f0b789476d8c", "historyId": "35a6306a76da74b4a50000628e9b532e", "testCaseId": "35a6306a76da74b4a50000628e9b532e", "fullName": "tests.delete_v1_account_login.test_delete_v1_account_login#test_delete_v1_account_login", "labels": [{"name": "parentSuite", "value": "tests.delete_v1_account_login"}, {"name": "suite", "value": "test_delete_v1_account_login"}, {"name": "host", "value": "sergeygureevs-MacBook-Pro.local"}, {"name": "thread", "value": "79350-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.delete_v1_account_login.test_delete_v1_account_login"}]}